var express = require('express')
var router = express.Router();
var mysql = require('mysql')
var Web3 = require('web3');
var web3 = new Web3(new Web3.providers.HttpProvider("http://localhost:8546"));

var connection = mysql.createConnection({
    host: 'localhost',
    port: 3306,
    user: 'root',
    password: 'root',
    database: 'realestatetransaction'
});

connection.connect();



router.post('/RealEstateTransaction', function (req, res) {
    var body = req.body;
    console.log(deployRealEstateTransaction(body));
});

//url routing
router.get('/', function (req, res) {
    console.log('hello');
});

function deployRealEstateTransaction(body) {
    var title = body.title;
    var seller = body.seller;
    var locationAddress = body.locationAddress;
    var value = body.value;

    var realestatecontractContract = web3.eth.contract([{
        "constant": false,
        "inputs": [{
            "name": "status",
            "type": "uint8"
        }],
        "name": "updateStatus",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
    }, {
        "constant": true,
        "inputs": [],
        "name": "getValue",
        "outputs": [{
            "name": "",
            "type": "uint256"
        }],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
    }, {
        "constant": true,
        "inputs": [],
        "name": "getStatus",
        "outputs": [{
            "name": "",
            "type": "string"
        }],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
    }, {
        "constant": false,
        "inputs": [{
            "name": "value",
            "type": "uint256"
        }],
        "name": "setValue",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
    }, {
        "constant": true,
        "inputs": [],
        "name": "getInfo",
        "outputs": [{
            "components": [{
                "name": "_title",
                "type": "string"
            }, {
                "name": "_seller",
                "type": "address"
            }, {
                "name": "_buyer",
                "type": "address"
            }, {
                "name": "_locationAddress",
                "type": "string"
            }, {
                "name": "_value",
                "type": "uint256"
            }, {
                "name": "_status",
                "type": "uint8"
            }],
            "name": "",
            "type": "tuple"
        }],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
    }, {
        "constant": false,
        "inputs": [{
            "name": "title",
            "type": "string"
        }],
        "name": "setTitle",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
    }, {
        "constant": true,
        "inputs": [],
        "name": "getSellerAddress",
        "outputs": [{
            "name": "",
            "type": "address"
        }],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
    }, {
        "constant": true,
        "inputs": [],
        "name": "getLocationAddress",
        "outputs": [{
            "name": "",
            "type": "string"
        }],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
    }, {
        "constant": true,
        "inputs": [],
        "name": "getBuyerAddress",
        "outputs": [{
            "name": "",
            "type": "address"
        }],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
    }, {
        "constant": true,
        "inputs": [],
        "name": "getTitle",
        "outputs": [{
            "name": "",
            "type": "string"
        }],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
    }, {
        "inputs": [{
            "name": "title",
            "type": "string"
        }, {
            "name": "seller",
            "type": "address"
        }, {
            "name": "locationAddress",
            "type": "string"
        }, {
            "name": "value",
            "type": "uint256"
        }],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "constructor"
    }]);
    var realestatecontract = realestatecontractContract.new(
        title,
        seller,
        locationAddress,
        value, {
            from: seller,
            data: '0x60806040523480156200001157600080fd5b506040516200147a3803806200147a8339810180604052620000379190810190620003ed565b836001600001908051906020019062000052929190620002b4565b50826001800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160016003019080519060200190620000b1929190620002b4565b50806001600401819055506000600160050160006101000a81548160ff02191690836002811115620000df57fe5b02179055504260006200010260006200017a640100000000026401000000009004565b6040518082805190602001908083835b60208310151562000139578051825260208201915060208101905060208303925062000112565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902081905550505050506200055a565b60608160028111156200018957fe5b600060028111156200019757fe5b1415620001dc576040805190810160405280600781526020017f74726164696e67000000000000000000000000000000000000000000000000008152509050620002af565b816002811115620001e957fe5b60016002811115620001f757fe5b14156200023c576040805190810160405280600881526020017f636f6d706c6574650000000000000000000000000000000000000000000000008152509050620002af565b8160028111156200024957fe5b6002808111156200025657fe5b14156200029b576040805190810160405280600a81526020017f7465726d696e61746564000000000000000000000000000000000000000000008152509050620002af565b602060405190810160405280600081525090505b919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002f757805160ff191683800117855562000328565b8280016001018555821562000328579182015b82811115620003275782518255916020019190600101906200030a565b5b5090506200033791906200033b565b5090565b6200036091905b808211156200035c57600081600090555060010162000342565b5090565b90565b600062000371825162000506565b905092915050565b600082601f83011215156200038d57600080fd5b8151620003a46200039e82620004b9565b6200048b565b91508082526020830160208301858383011115620003c157600080fd5b620003ce83828462000524565b50505092915050565b6000620003e582516200051a565b905092915050565b600080600080608085870312156200040457600080fd5b600085015167ffffffffffffffff8111156200041f57600080fd5b6200042d8782880162000379565b9450506020620004408782880162000363565b935050604085015167ffffffffffffffff8111156200045e57600080fd5b6200046c8782880162000379565b92505060606200047f87828801620003d7565b91505092959194509250565b6000604051905081810181811067ffffffffffffffff82111715620004af57600080fd5b8060405250919050565b600067ffffffffffffffff821115620004d157600080fd5b601f19601f8301169050602081019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200051382620004e6565b9050919050565b6000819050919050565b60005b838110156200054457808201518184015260208101905062000527565b8381111562000554576000848401525b50505050565b610f10806200056a6000396000f3fe6080604052600436106100a4576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630b3af7f9146100a957806320965255146100d25780634e69d560146100fd57806355241077146101285780635a9b0b891461015157806372910be01461017c57806384b09e86146101a5578063c45bf3cc146101d0578063fa0c1513146101fb578063ff3c1a8f14610226575b600080fd5b3480156100b557600080fd5b506100d060048036036100cb9190810190610bcd565b610251565b005b3480156100de57600080fd5b506100e7610327565b6040516100f49190610d7e565b60405180910390f35b34801561010957600080fd5b50610112610334565b60405161011f9190610d3a565b60405180910390f35b34801561013457600080fd5b5061014f600480360361014a9190810190610ba4565b610496565b005b34801561015d57600080fd5b5061016661053a565b6040516101739190610d5c565b60405180910390f35b34801561018857600080fd5b506101a3600480360361019e9190810190610b63565b61077c565b005b3480156101b157600080fd5b506101ba61082f565b6040516101c79190610d1f565b60405180910390f35b3480156101dc57600080fd5b506101e561085b565b6040516101f29190610d3a565b60405180910390f35b34801561020757600080fd5b50610210610900565b60405161021d9190610d1f565b60405180910390f35b34801561023257600080fd5b5061023b61092d565b6040516102489190610d3a565b60405180910390f35b6001600281111561025e57fe5b600160050160009054906101000a900460ff16600281111561027c57fe5b1415151561028957600080fd5b60008160ff1614156102bd576000600160050160006101000a81548160ff021916908360028111156102b757fe5b02179055505b60018160ff1614156102f05760018060050160006101000a81548160ff021916908360028111156102ea57fe5b02179055505b60028160ff161415610324576002600160050160006101000a81548160ff0219169083600281111561031e57fe5b02179055505b50565b6000600160040154905090565b6060600160050160009054906101000a900460ff16600281111561035457fe5b6000600281111561036157fe5b14156103a4576040805190810160405280600781526020017f74726164696e67000000000000000000000000000000000000000000000000008152509050610493565b600160050160009054906101000a900460ff1660028111156103c257fe5b600160028111156103cf57fe5b1415610412576040805190810160405280600881526020017f636f6d706c6574650000000000000000000000000000000000000000000000008152509050610493565b600160050160009054906101000a900460ff16600281111561043057fe5b60028081111561043c57fe5b141561047f576040805190810160405280600a81526020017f7465726d696e61746564000000000000000000000000000000000000000000008152509050610493565b602060405190810160405280600081525090505b90565b600160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156104f557600080fd5b6001600281111561050257fe5b600160050160009054906101000a900460ff16600281111561052057fe5b1415151561052d57600080fd5b8060016004018190555050565b6105426109d2565b600160c06040519081016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105e95780601f106105be576101008083540402835291602001916105e9565b820191906000526020600020905b8154815290600101906020018083116105cc57829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107375780601f1061070c57610100808354040283529160200191610737565b820191906000526020600020905b81548152906001019060200180831161071a57829003601f168201915b50505050508152602001600482015481526020016005820160009054906101000a900460ff16600281111561076857fe5b600281111561077357fe5b81525050905090565b6001800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156107da57600080fd5b600160028111156107e757fe5b600160050160009054906101000a900460ff16600281111561080557fe5b1415151561081257600080fd5b806001600001908051906020019061082b929190610a40565b5050565b60006001800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060016003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108f65780601f106108cb576101008083540402835291602001916108f6565b820191906000526020600020905b8154815290600101906020018083116108d957829003601f168201915b5050505050905090565b6000600160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060016000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109c85780601f1061099d576101008083540402835291602001916109c8565b820191906000526020600020905b8154815290600101906020018083116109ab57829003601f168201915b5050505050905090565b60c06040519081016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081526020016000815260200160006002811115610a3a57fe5b81525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610a8157805160ff1916838001178555610aaf565b82800160010185558215610aaf579182015b82811115610aae578251825591602001919060010190610a93565b5b509050610abc9190610ac0565b5090565b610ae291905b80821115610ade576000816000905550600101610ac6565b5090565b90565b600082601f8301121515610af857600080fd5b8135610b0b610b0682610dc6565b610d99565b91508082526020830160208301858383011115610b2757600080fd5b610b32838284610e83565b50505092915050565b6000610b478235610e5a565b905092915050565b6000610b5b8235610e64565b905092915050565b600060208284031215610b7557600080fd5b600082013567ffffffffffffffff811115610b8f57600080fd5b610b9b84828501610ae5565b91505092915050565b600060208284031215610bb657600080fd5b6000610bc484828501610b3b565b91505092915050565b600060208284031215610bdf57600080fd5b6000610bed84828501610b4f565b91505092915050565b610bff81610e08565b82525050565b610c0e81610e71565b82525050565b6000610c1f82610dfd565b808452610c33816020860160208601610e92565b610c3c81610ec5565b602085010191505092915050565b6000610c5582610df2565b808452610c69816020860160208601610e92565b610c7281610ec5565b602085010191505092915050565b600060c0830160008301518482036000860152610c9d8282610c4a565b9150506020830151610cb26020860182610bf6565b506040830151610cc56040860182610bf6565b5060608301518482036060860152610cdd8282610c4a565b9150506080830151610cf26080860182610d10565b5060a0830151610d0560a0860182610c05565b508091505092915050565b610d1981610e50565b82525050565b6000602082019050610d346000830184610bf6565b92915050565b60006020820190508181036000830152610d548184610c14565b905092915050565b60006020820190508181036000830152610d768184610c80565b905092915050565b6000602082019050610d936000830184610d10565b92915050565b6000604051905081810181811067ffffffffffffffff82111715610dbc57600080fd5b8060405250919050565b600067ffffffffffffffff821115610ddd57600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b6000610e1382610e30565b9050919050565b6000600382101515610e2857fe5b819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000819050919050565b600060ff82169050919050565b6000610e7c82610e1a565b9050919050565b82818337600083830152505050565b60005b83811015610eb0578082015181840152602081019050610e95565b83811115610ebf576000848401525b50505050565b6000601f19601f830116905091905056fea265627a7a72305820ba6b20b97706f554d8d004dafc20e17d3b24dae331f6f195791adf0c70610ce46c6578706572696d656e74616cf50037',
            gas: '4700000'
        },
        function (e, contract) {
            //console.log(e, contract);
            if (typeof contract.address !== 'undefined') {
                //console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
                connection.query('insert into realestate(realestate_ca,realestate_ctx) values(?,?)', [contract.address, contract.transactionHash], (err, rows) => {
                    if (err) console.log(err)
                    //else console.log(rows.insertId)
                })
            }
        })
}

module.exports = router;