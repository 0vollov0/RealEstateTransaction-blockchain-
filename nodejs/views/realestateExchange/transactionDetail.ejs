<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">

    <!-- Favicons -->
    <link rel="apple-touch-icon" src="/img/blockchain.png" sizes="180x180">
    <link rel="icon" src="/img/blockchain.png" sizes="32x32" type="image/png">
    <link rel="icon" src="/img/blockchain.png" sizes="16x16" type="image/png">
    <link rel="manifest" href="https://getbootstrap.com/docs/4.4/assets/img/favicons/manifest.json">
    <link rel="mask-icon" href="https://getbootstrap.com/docs/4.4/assets/img/favicons/safari-pinned-tab.svg"
        color="#563d7c">
    <link rel="icon" href="/img/blockchain.ico">

    <link rel="stylesheet" href="/css/bootstrap.min.css">
    <link rel="stylesheet" href="/css/offcanvas.css">
    <script src="/js/jquery.min.js"></script>
    <script src="/js/bootstrap.min.js"></script>
    <script src="/js/offcanvas.js"></script>
    <title>RealEstateTransaction</title>
</head>

<body>
    <section id="nav"></section>
    <section id="nav_second"></section>

    <main role="main" class="container">
        <hr>
        <h2>부동산 상세 정보</h2>
        <table class="table table-striped">
            <tbody>
                <tr>
                    <th scope="row">Title : </th>
                    <td><%=title%></td>
                </tr>
                <tr>
                    <th scope="row">Seller : </th>
                    <td id="seller"><%=seller%></td>
                </tr>
                <%
                    if (status == '거래완료') {
                %>
                    <tr>
                        <th scope="row">Buyer : </th>
                        <td id="buyer"><%=buyer%></td>
                    </tr>
                <%                            
                    }
                %>
                <tr>
                    <th scope="row">Price : </th>
                    <%
                        if (coinType == 1) {
                    %>
                    <td id="coin_type" class="btc"><%=price%> BTC</td>
                    <%                            
                        }else{
                    %>
                    <td id="coin_type" class="eth"><%=price%> ETH</td>
                    <%
                    }
                    %>
                </tr>
                <tr>
                    <th scope="row">Address : </th>
                    <td>
                        <div id="map" style="width:100%;height:350px;"></div>
                    </td>
                </tr>
                <tr>
                    <th scope="row">Timestamp : </th>
                    <td id="timestamp"><%=timestamp%></td>
                </tr>
                <tr>
                    <th scope="row">Status : </th>
                    <td id="status"><%=status%></td>
                </tr>
            </tbody>
        </table>
        <%
            if (Number(seller) == Number(mb_account) && status == '판매중') {
        %>
            <button type="button" id="modify" class="btn btn-warning">수정</button>
            <button type="button" id="stop" class="btn btn-danger">판매중지</button>
        <%
            } else if (status == '판매중') {
        %>
            <button type="button" id="purchase" class="btn btn-success">구매</button>
        <%                
            }
        %>
    </main>
    <input type="hidden" name="mb_id_session" id="mb_id_session" value="<%=mb_id%>">
    <input type="hidden" name="title" id="title" value="<%=title%>">
    <input type="hidden" name="locationAddress" id="locationAddress" value="<%=locationAddress%>">
    <input type="hidden" name="contract_address" id="contract_address" value="<%=contract_address%>">
    <input type="hidden" name="coinType" id="coinType" value="<%=coinType%>">
    <input type="hidden" name="price" id="price" value="<%=price%>">
    <input type="hidden" name="status" id="status" value="<%=status%>">
</body>
<script>

</script>
<script src="/js/nav.js"></script>
<script src="/js/nav_second.js"></script>
<script type="text/javascript"
    src="//dapi.kakao.com/v2/maps/sdk.js?appkey=c00ea0bf28cce3c71be998107d5a7f76&libraries=services">
</script>
<script>
    $(() => {
        document.getElementById('timestamp').innerText = getTimestampToDate(document.getElementById('timestamp')
            .innerText);
        //var status = document.getElementById('status').innerText;
        var locationAddress = document.getElementById('locationAddress').value;
        // switch (status) {
        //     case '0':
        //         document.getElementById('status').innerText = '판매중';
        //         break;
        //     case '1':
        //         document.getElementById('status').innerText = '거래완료';
        //         break;
        //     case '2':
        //         document.getElementById('status').innerText = '판매중지';
        //         break;

        //     default:
        //         break;
        // }

        var mapContainer = document.getElementById('map'), // 지도를 표시할 div 
            mapOption = {
                center: new kakao.maps.LatLng(33.450701, 126.570667), // 지도의 중심좌표
                level: 3 // 지도의 확대 레벨
            };

        // 지도를 생성합니다    
        var map = new kakao.maps.Map(mapContainer, mapOption);

        // 주소-좌표 변환 객체를 생성합니다
        var geocoder = new kakao.maps.services.Geocoder();

        // 주소로 좌표를 검색합니다
        geocoder.addressSearch(locationAddress, function (result, status) {

            // 정상적으로 검색이 완료됐으면 
            if (status === kakao.maps.services.Status.OK) {

                var coords = new kakao.maps.LatLng(result[0].y, result[0].x);

                // 결과값으로 받은 위치를 마커로 표시합니다
                var marker = new kakao.maps.Marker({
                    map: map,
                    position: coords
                });

                // 인포윈도우로 장소에 대한 설명을 표시합니다
                var infowindow = new kakao.maps.InfoWindow({
                    content: '<div style="width:150px;text-align:center;padding:6px 0;"><h5>매물 위치</h5></div>'
                });
                infowindow.open(map, marker);

                // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다
                map.setCenter(coords);
            }
        });

        //구매 버튼
        if (document.getElementById('purchase')) {
            document.getElementById('purchase').addEventListener('click', () => {
                if (document.getElementById('mb_id_session').value == '' || document.getElementById('mb_id_session').value.length < 1) {
                    if (confirm('로그인이 필요 합니다. 로그인 하시겠습니까?')) window.location.href = '/member/login'
                }else if (confirm('구매 하시 겠습니까?')) purchase();
            })
        }

        //수정 버튼
        if (document.getElementById('modify')) {
            document.getElementById('modify').addEventListener('click',()=>{
                var contract_address = document.getElementById('contract_address').value;
                var title = document.getElementById('title').value;
                var seller = document.getElementById('seller').innerText;
                var coinType = document.getElementById('coinType').value;
                var price = document.getElementById('price').value;
                var locationAddress = document.getElementById('locationAddress').value;
                var param ='contract_address='+contract_address +'&title=' + title + '&seller='+ seller +'&coinType='+coinType + '&price='+ price + '&locationAddress='+ locationAddress;

                window.location.href = '/realestateExchange/modify?'+param;
            })
        }

        if (document.getElementById('stop')) {
            document.getElementById('stop').addEventListener('click',()=>{
                var data = {
                    'contract_address' : document.getElementById('contract_address').value,
                    'status' : 2
                };
                sendAjax('/realestateExchange/status',data);
            })
        }
    })

    function getTimestampToDate(timestamp) {
        var date = new Date(timestamp * 1000);
        var chgTimestamp = date.getFullYear().toString() + '-' +
            +addZero(date.getMonth() + 1) + '-' +
            addZero(date.getDate().toString()) + ' ' +
            addZero(date.getHours().toString()) + ':' +
            addZero(date.getMinutes().toString()) + ':' +
            addZero(date.getSeconds().toString());
        return chgTimestamp;
    }

    function addZero(data) {
        return (data < 10) ? "0" + data : data;
    }

    function purchase() {
        var data = {};
        var coin_type = document.getElementById('coin_type').className;

        switch (coin_type) {
            case 'btc':
                coin_type = 1;
                break;
            case 'eth':
                coin_type = 2;
                break;
            default:
                coin_type = 1;
                break;
        }
        getCoinBalance(coin_type).then((result) => {
            if (coin_type == 1) {
                if (Number(result.btc) < Number(document.getElementById('price').value)) {
                    alert('비트코인이 부족 합니다.');
                    return;
                }
            } else if (coin_type == 2) {
                if (Number(result.eth) < Number(document.getElementById('price').value)) {
                    alert('이더리움이 부족 합니다.');
                    return;
                }
            } else {
                alert('알 수 없는 오류');
            }
            data.contract_address = document.getElementById('contract_address').value;
            data.seller = document.getElementById('seller').innerText;
            data.buyer = result.mb_account;
            data.price = document.getElementById('price').value;
            data.coin_type = coin_type;
            data = JSON.stringify(data);
            var url = 'http://localhost:8080/realestateExchange/purchase';
            var xhr = new XMLHttpRequest();
            xhr.open('POST', url);
            xhr.setRequestHeader('Content-Type', 'application/json');
            xhr.send(data);

            xhr.addEventListener('load', function () {
                var result = JSON.parse(xhr.responseText);
                console.log(result);
            })
        })

    }

    function getCoinBalance(coin_type) {
        return new Promise((resolve, reject) => {
            var url = 'http://localhost:8080/coin/balanceOf?coin_type=' + coin_type;
            var xhr = new XMLHttpRequest();
            xhr.open('GET', url);
            xhr.send();

            xhr.addEventListener('load', function () {
                var result = JSON.parse(xhr.responseText);
                resolve(result);
            })
        })
    }

    function sendAjax(url, data) {
        data = JSON.stringify(data);

        var xhr = new XMLHttpRequest();
        xhr.open('POST', url);
        xhr.setRequestHeader('Content-Type', 'application/json');
        xhr.send(data);

        xhr.addEventListener('load', function () {
            var result = JSON.parse(xhr.responseText);
            if (result.result == true) window.location.href='/'

        })
    }
</script>

</html>